apt工具集
	安装软件


sudo apt-get install 软件名

Ubuntu  软件源:
	1.将软件源设置成163的软件源

	2.更新软件源
	sudo apt-get update
	
	3.重建软件依赖关系
	sudo apt-get install -f

	4.安装软件
	sudo apt-get install 软件名

	5.卸载软件
	sudo apt-get remove 软件名

	sudo apt-get remove 软件名 --purge
	
apt和dpkg的区别
	1.apt下载并且安装
	2.dpkg必须有安装包才能安装
	3.apt可以自动解析软件依赖关系
	4.dpkg需要解析软件依赖关系并下载依赖软件

tftp、nfs 基于网络的服务器
	
tftp服务器:
	安装配置tftp服务器
	1.下载tftp服务器
	sudo apt-get install tftp tftpd-hpa

	2.指定tftp管理目录
	   2.1打开配置文件
	   sudo vim /etc/default/tftpd-hpa

	   2.2修改配置文件
		# /etc/default/tftpd-hpa
		
		TFTP_USERNAME="tftp"
		TFTP_DIRECTORY="/tftpboot"
		TFTP_ADDRESS="0.0.0.0:69"                     
		TFTP_OPTIONS="--secure -l -c"

	3.创建tftp管理目录
	sudo mkdir /tftpboot

	4.修改tftp管理目录的权限
	sudo chmod 777 /tftpboot

	5.重启tftp服务
	sudo service tftpd-hpa restart

	测试tftp服务器
		测试下载功能:
	将192.168.0.XX:/tftpboot  filename文件下载到当前目录下

		tftp 192.168.0.XX
		get filename
		quit

		测试上传功能:
	将当前文件夹下的filename文件上传到192.168.0.XX:/tftpboot下
		
		tftp 192.168.0.XX
		put filename
		quit


nfs服务器:
	网络挂载

	安装服务器
	1.下载nfs服务器
	sudo apt-get install nfs-kernel-server
	
	2.修改配置文件
		2.1进入配置文件中
		sudo vim /etc/exports

		2.2修改配置文件中的内容
		/source/rootfs  *(rw,sync,no_subtree_check)

	3.创建指定的挂载目录
	sudo mkdir /source
	sudo mkdir /source/rootfs

	4.修改文件权限
	sudo chmod 777 /source
	sudo chmod 777 /source/rootfs

	5.重启nfs服务器
	sudo service nfs-kernel-server restart

	测试nfs服务器

	sudo mount -t nfs 127.0.0.1:/source/rootfs /mnt

	sudo umount /mnt

ssh服务器:
	远程登录服务器

	安装ssh服务器
	1.sudo apt-get install ssh

	ssh 192.168.0.XX


Linux基础 : vim 编辑器 GCC编译器
	shell命令
	1.基本shell命令
	ls
	cd
	pwd
	cp
	mv
	mkdir
	rmdir
	rm
	touch

	2.文件查看
	cat
	more
	less
	head
	tail

	3.文件查找
	find
	whereis

	4.用户管理命令

	5.进程管理命令

	echo
	6.网络命令
	ping
	ifconfig

	tftp
	nfs
	ssh

1.基本数据类型、运算符、表达式
auto、char、double、extern、float、int
long、register、short、signed、sizeof、static
unsigned、void
2.C语言中常用的输入输出
3.流程控制
break、case、continue、default、do、else、
for、goto、if、return、switch、while
4.数组
5.指针
6.函数
7.结构体和共用体(构造数据类型)
enum、struct、typedef、union

8.指针高级
const、
9.函数高级
10.内存管理

volatitle

C语言的发展:

机器语言  硬件可以直接执行
汇编语言

高级语言  C C++ JAVA C#

C语言的用途:
	JAVA  29% 
	C     21%

	C语言特点:
		代码精炼
		直接操作内存(直接操作硬件设备)
		执行效率高
	
	C语言 -> 系统级编程
		 服务器编程
		 驱动编程
		 操作硬件

C语言发展历史
	algo A		面向过程
			面向对象
	algo B		Unix
	C		Unix	
		

Dennis Ritchie
32关键字


基本的数据类型、运算符、表达式

整数、小数、自然数...

100

int、char、float、double、long、short
1.基本数据类型:
  1.1整数类型:(分为有符号类型和无符号类型)
     short
     int 
     long
     char

     signed int a = -10;
     unsigned int a = 10;

     int a;默认为有符号类型

		int
  类型名称: 整数类型
  类型大小: 4   字节
  表示范围: 有符号类型: -2^31 - 2^31-1
	    无符号类型: 0 - 2^32-1

		short
  类型名称: 短整型
  类型大小: 2   字节
  表示范围: 有符号类型: -2^15 - 2^15-1
	    无符号类型: 0 - 2^16-1

		long
  类型名称: 长整型
  类型大小: 4   字节
  表示范围:  有符号类型: -2^31 - 2^31-1
	     无符号类型: 0 - 2^32-1
	     
		char
  类型名称: 字符型
  类型大小: 1   字节
  表示范围: 有符号类型:-128 - 127
            无符号类型:0 - 255

  ASCII














